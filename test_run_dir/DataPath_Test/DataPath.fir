;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit DataPath : 
  module CU : 
    input clock : Clock
    input reset : Reset
    output io : {flip ins : UInt<32>, RD : UInt<5>, Rs1 : UInt<5>, Rs2 : UInt<5>, Imm : SInt<32>, Instype : UInt<1>, RegWrite : UInt<1>, MemWrite : UInt<1>, func : UInt<5>, wbselect : UInt<2>, aluselect : UInt<1>, lengthselect : UInt<2>, flip dobranch : UInt<1>, btypefun : UInt<4>, pcselec : UInt<1>, btype : UInt<1>, jump : UInt<1>}
    
    node Opcode = bits(io.ins, 6, 0) @[CU.scala 36:22]
    io.btypefun <= UInt<1>("h00") @[CU.scala 37:15]
    io.btype <= UInt<1>("h00") @[CU.scala 38:12]
    io.jump <= UInt<1>("h00") @[CU.scala 39:11]
    node _T = eq(Opcode, UInt<6>("h033")) @[CU.scala 41:15]
    when _T : @[CU.scala 41:32]
      node _io_RD_T = bits(io.ins, 11, 7) @[CU.scala 42:19]
      io.RD <= _io_RD_T @[CU.scala 42:10]
      node io_func_hi = bits(io.ins, 14, 12) @[CU.scala 43:26]
      node io_func_lo = bits(io.ins, 30, 30) @[CU.scala 43:40]
      node _io_func_T = cat(io_func_hi, io_func_lo) @[Cat.scala 30:58]
      io.func <= _io_func_T @[CU.scala 43:13]
      node _io_Rs1_T = bits(io.ins, 19, 15) @[CU.scala 44:21]
      io.Rs1 <= _io_Rs1_T @[CU.scala 44:12]
      node _io_Rs2_T = bits(io.ins, 24, 20) @[CU.scala 45:21]
      io.Rs2 <= _io_Rs2_T @[CU.scala 45:12]
      io.Imm <= asSInt(UInt<1>("h00")) @[CU.scala 46:12]
      io.RegWrite <= UInt<1>("h01") @[CU.scala 47:17]
      io.MemWrite <= UInt<1>("h00") @[CU.scala 48:17]
      io.aluselect <= UInt<1>("h00") @[CU.scala 49:18]
      io.Instype <= UInt<1>("h01") @[CU.scala 50:16]
      io.wbselect <= UInt<1>("h01") @[CU.scala 51:17]
      io.lengthselect <= UInt<1>("h00") @[CU.scala 52:21]
      io.pcselec <= UInt<1>("h00") @[CU.scala 53:16]
      skip @[CU.scala 41:32]
    else : @[CU.scala 57:39]
      node _T_1 = eq(Opcode, UInt<5>("h013")) @[CU.scala 57:22]
      when _T_1 : @[CU.scala 57:39]
        node _io_RD_T_1 = bits(io.ins, 11, 7) @[CU.scala 58:21]
        io.RD <= _io_RD_T_1 @[CU.scala 58:12]
        node _io_func_T_1 = bits(io.ins, 14, 12) @[CU.scala 59:34]
        node _io_func_T_2 = bits(io.ins, 30, 30) @[CU.scala 65:28]
        node _io_func_T_3 = mux(_io_func_T_2, UInt<4>("h0b"), UInt<4>("h0a")) @[CU.scala 65:21]
        node _io_func_T_4 = eq(UInt<1>("h01"), _io_func_T_1) @[Mux.scala 80:60]
        node _io_func_T_5 = mux(_io_func_T_4, UInt<2>("h02"), UInt<1>("h00")) @[Mux.scala 80:57]
        node _io_func_T_6 = eq(UInt<2>("h02"), _io_func_T_1) @[Mux.scala 80:60]
        node _io_func_T_7 = mux(_io_func_T_6, UInt<3>("h04"), _io_func_T_5) @[Mux.scala 80:57]
        node _io_func_T_8 = eq(UInt<2>("h03"), _io_func_T_1) @[Mux.scala 80:60]
        node _io_func_T_9 = mux(_io_func_T_8, UInt<3>("h06"), _io_func_T_7) @[Mux.scala 80:57]
        node _io_func_T_10 = eq(UInt<3>("h04"), _io_func_T_1) @[Mux.scala 80:60]
        node _io_func_T_11 = mux(_io_func_T_10, UInt<4>("h08"), _io_func_T_9) @[Mux.scala 80:57]
        node _io_func_T_12 = eq(UInt<3>("h05"), _io_func_T_1) @[Mux.scala 80:60]
        node _io_func_T_13 = mux(_io_func_T_12, _io_func_T_3, _io_func_T_11) @[Mux.scala 80:57]
        node _io_func_T_14 = eq(UInt<3>("h06"), _io_func_T_1) @[Mux.scala 80:60]
        node _io_func_T_15 = mux(_io_func_T_14, UInt<4>("h0c"), _io_func_T_13) @[Mux.scala 80:57]
        node _io_func_T_16 = eq(UInt<3>("h07"), _io_func_T_1) @[Mux.scala 80:60]
        node _io_func_T_17 = mux(_io_func_T_16, UInt<4>("h0e"), _io_func_T_15) @[Mux.scala 80:57]
        io.func <= _io_func_T_17 @[CU.scala 59:15]
        node _io_Rs1_T_1 = bits(io.ins, 19, 15) @[CU.scala 69:23]
        io.Rs1 <= _io_Rs1_T_1 @[CU.scala 69:14]
        io.Rs2 <= UInt<1>("h00") @[CU.scala 70:14]
        node _io_Imm_T = bits(io.ins, 31, 31) @[CU.scala 71:35]
        node _io_Imm_T_1 = bits(_io_Imm_T, 0, 0) @[Bitwise.scala 72:15]
        node io_Imm_hi = mux(_io_Imm_T_1, UInt<19>("h07ffff"), UInt<19>("h00")) @[Bitwise.scala 72:12]
        node io_Imm_lo = bits(io.ins, 31, 20) @[CU.scala 71:47]
        node _io_Imm_T_2 = cat(io_Imm_hi, io_Imm_lo) @[Cat.scala 30:58]
        node _io_Imm_T_3 = asSInt(_io_Imm_T_2) @[CU.scala 71:63]
        io.Imm <= _io_Imm_T_3 @[CU.scala 71:14]
        io.RegWrite <= UInt<1>("h01") @[CU.scala 72:19]
        io.MemWrite <= UInt<1>("h00") @[CU.scala 73:19]
        io.Instype <= UInt<1>("h00") @[CU.scala 74:18]
        io.wbselect <= UInt<1>("h01") @[CU.scala 75:19]
        io.aluselect <= UInt<1>("h00") @[CU.scala 76:20]
        io.lengthselect <= UInt<1>("h00") @[CU.scala 77:23]
        io.pcselec <= UInt<1>("h00") @[CU.scala 78:18]
        skip @[CU.scala 57:39]
      else : @[CU.scala 82:39]
        node _T_2 = eq(Opcode, UInt<2>("h03")) @[CU.scala 82:22]
        when _T_2 : @[CU.scala 82:39]
          node _io_RD_T_2 = bits(io.ins, 11, 7) @[CU.scala 83:22]
          io.RD <= _io_RD_T_2 @[CU.scala 83:13]
          io.func <= UInt<1>("h00") @[CU.scala 84:15]
          node _io_Rs1_T_2 = bits(io.ins, 19, 15) @[CU.scala 85:23]
          io.Rs1 <= _io_Rs1_T_2 @[CU.scala 85:14]
          io.Rs2 <= UInt<1>("h00") @[CU.scala 86:14]
          node _io_Imm_T_4 = bits(io.ins, 31, 31) @[CU.scala 87:35]
          node _io_Imm_T_5 = bits(_io_Imm_T_4, 0, 0) @[Bitwise.scala 72:15]
          node io_Imm_hi_1 = mux(_io_Imm_T_5, UInt<19>("h07ffff"), UInt<19>("h00")) @[Bitwise.scala 72:12]
          node io_Imm_lo_1 = bits(io.ins, 31, 20) @[CU.scala 87:47]
          node _io_Imm_T_6 = cat(io_Imm_hi_1, io_Imm_lo_1) @[Cat.scala 30:58]
          node _io_Imm_T_7 = asSInt(_io_Imm_T_6) @[CU.scala 87:63]
          io.Imm <= _io_Imm_T_7 @[CU.scala 87:14]
          io.RegWrite <= UInt<1>("h01") @[CU.scala 88:19]
          io.MemWrite <= UInt<1>("h00") @[CU.scala 89:19]
          io.Instype <= UInt<1>("h00") @[CU.scala 90:18]
          io.wbselect <= UInt<1>("h00") @[CU.scala 91:19]
          io.aluselect <= UInt<1>("h00") @[CU.scala 92:20]
          node _io_lengthselect_T = bits(io.ins, 14, 12) @[CU.scala 93:32]
          io.lengthselect <= _io_lengthselect_T @[CU.scala 93:23]
          io.pcselec <= UInt<1>("h00") @[CU.scala 94:18]
          skip @[CU.scala 82:39]
        else : @[CU.scala 97:40]
          node _T_3 = eq(Opcode, UInt<6>("h023")) @[CU.scala 97:22]
          when _T_3 : @[CU.scala 97:40]
            node _io_RD_T_3 = bits(io.ins, 11, 7) @[CU.scala 98:22]
            io.RD <= _io_RD_T_3 @[CU.scala 98:13]
            io.func <= UInt<1>("h00") @[CU.scala 99:15]
            node _io_Rs1_T_3 = bits(io.ins, 19, 15) @[CU.scala 100:23]
            io.Rs1 <= _io_Rs1_T_3 @[CU.scala 100:14]
            node _io_Rs2_T_1 = bits(io.ins, 24, 20) @[CU.scala 101:23]
            io.Rs2 <= _io_Rs2_T_1 @[CU.scala 101:14]
            node _io_Imm_T_8 = bits(io.ins, 31, 31) @[CU.scala 102:35]
            node _io_Imm_T_9 = bits(_io_Imm_T_8, 0, 0) @[Bitwise.scala 72:15]
            node io_Imm_hi_hi = mux(_io_Imm_T_9, UInt<19>("h07ffff"), UInt<19>("h00")) @[Bitwise.scala 72:12]
            node io_Imm_hi_lo = bits(io.ins, 31, 25) @[CU.scala 102:47]
            node io_Imm_lo_2 = bits(io.ins, 11, 7) @[CU.scala 102:62]
            node io_Imm_hi_2 = cat(io_Imm_hi_hi, io_Imm_hi_lo) @[Cat.scala 30:58]
            node _io_Imm_T_10 = cat(io_Imm_hi_2, io_Imm_lo_2) @[Cat.scala 30:58]
            node _io_Imm_T_11 = asSInt(_io_Imm_T_10) @[CU.scala 102:77]
            io.Imm <= _io_Imm_T_11 @[CU.scala 102:14]
            io.RegWrite <= UInt<1>("h00") @[CU.scala 103:19]
            io.MemWrite <= UInt<1>("h01") @[CU.scala 104:19]
            io.Instype <= UInt<1>("h00") @[CU.scala 105:18]
            io.wbselect <= UInt<1>("h00") @[CU.scala 106:19]
            io.aluselect <= UInt<1>("h01") @[CU.scala 107:20]
            node _io_lengthselect_T_1 = bits(io.ins, 14, 12) @[CU.scala 108:32]
            io.lengthselect <= _io_lengthselect_T_1 @[CU.scala 108:23]
            io.pcselec <= UInt<1>("h00") @[CU.scala 109:18]
            skip @[CU.scala 97:40]
          else : @[CU.scala 113:39]
            node _T_4 = eq(Opcode, UInt<7>("h063")) @[CU.scala 113:22]
            when _T_4 : @[CU.scala 113:39]
              io.func <= UInt<1>("h00") @[CU.scala 114:15]
              io.RD <= UInt<1>("h00") @[CU.scala 115:13]
              node _io_btypefun_T = bits(io.ins, 14, 12) @[CU.scala 116:28]
              io.btypefun <= _io_btypefun_T @[CU.scala 116:19]
              node _io_Rs1_T_4 = bits(io.ins, 19, 15) @[CU.scala 117:23]
              io.Rs1 <= _io_Rs1_T_4 @[CU.scala 117:14]
              node _io_Rs2_T_2 = bits(io.ins, 24, 20) @[CU.scala 118:23]
              io.Rs2 <= _io_Rs2_T_2 @[CU.scala 118:14]
              node _io_Imm_T_12 = bits(io.ins, 31, 31) @[CU.scala 119:37]
              node _io_Imm_T_13 = bits(_io_Imm_T_12, 0, 0) @[Bitwise.scala 72:15]
              node io_Imm_hi_hi_hi = mux(_io_Imm_T_13, UInt<19>("h07ffff"), UInt<19>("h00")) @[Bitwise.scala 72:12]
              node io_Imm_hi_hi_lo = bits(io.ins, 31, 31) @[CU.scala 119:49]
              node io_Imm_hi_lo_1 = bits(io.ins, 7, 7) @[CU.scala 119:60]
              node io_Imm_lo_hi_hi = bits(io.ins, 30, 25) @[CU.scala 119:70]
              node io_Imm_lo_hi_lo = bits(io.ins, 11, 8) @[CU.scala 119:84]
              node io_Imm_lo_hi = cat(io_Imm_lo_hi_hi, io_Imm_lo_hi_lo) @[Cat.scala 30:58]
              node io_Imm_lo_3 = cat(io_Imm_lo_hi, UInt<1>("h00")) @[Cat.scala 30:58]
              node io_Imm_hi_hi_1 = cat(io_Imm_hi_hi_hi, io_Imm_hi_hi_lo) @[Cat.scala 30:58]
              node io_Imm_hi_3 = cat(io_Imm_hi_hi_1, io_Imm_hi_lo_1) @[Cat.scala 30:58]
              node _io_Imm_T_14 = cat(io_Imm_hi_3, io_Imm_lo_3) @[Cat.scala 30:58]
              node _io_Imm_T_15 = asSInt(_io_Imm_T_14) @[CU.scala 119:104]
              io.Imm <= _io_Imm_T_15 @[CU.scala 119:14]
              io.MemWrite <= UInt<1>("h00") @[CU.scala 120:19]
              io.RegWrite <= UInt<1>("h00") @[CU.scala 121:19]
              io.Instype <= UInt<1>("h00") @[CU.scala 122:18]
              io.lengthselect <= UInt<1>("h00") @[CU.scala 123:23]
              io.aluselect <= UInt<1>("h01") @[CU.scala 124:20]
              io.wbselect <= UInt<1>("h00") @[CU.scala 125:19]
              io.btype <= UInt<1>("h01") @[CU.scala 126:16]
              node _io_pcselec_T = and(io.dobranch, io.btype) @[CU.scala 128:37]
              node _io_pcselec_T_1 = mux(_io_pcselec_T, UInt<1>("h01"), UInt<1>("h00")) @[CU.scala 128:24]
              io.pcselec <= _io_pcselec_T_1 @[CU.scala 128:18]
              skip @[CU.scala 113:39]
            else : @[CU.scala 130:41]
              node _T_5 = eq(Opcode, UInt<7>("h06f")) @[CU.scala 130:23]
              when _T_5 : @[CU.scala 130:41]
                node _io_RD_T_4 = bits(io.ins, 11, 7) @[CU.scala 131:20]
                io.RD <= _io_RD_T_4 @[CU.scala 131:11]
                node _io_Imm_T_16 = bits(io.ins, 31, 31) @[CU.scala 132:35]
                node _io_Imm_T_17 = bits(_io_Imm_T_16, 0, 0) @[Bitwise.scala 72:15]
                node io_Imm_hi_hi_hi_1 = mux(_io_Imm_T_17, UInt<11>("h07ff"), UInt<11>("h00")) @[Bitwise.scala 72:12]
                node io_Imm_hi_hi_lo_1 = bits(io.ins, 31, 31) @[CU.scala 132:47]
                node io_Imm_hi_lo_2 = bits(io.ins, 19, 12) @[CU.scala 132:58]
                node io_Imm_lo_hi_hi_1 = bits(io.ins, 20, 20) @[CU.scala 132:72]
                node io_Imm_lo_hi_lo_1 = bits(io.ins, 30, 21) @[CU.scala 132:83]
                node io_Imm_lo_hi_1 = cat(io_Imm_lo_hi_hi_1, io_Imm_lo_hi_lo_1) @[Cat.scala 30:58]
                node io_Imm_lo_4 = cat(io_Imm_lo_hi_1, UInt<1>("h00")) @[Cat.scala 30:58]
                node io_Imm_hi_hi_2 = cat(io_Imm_hi_hi_hi_1, io_Imm_hi_hi_lo_1) @[Cat.scala 30:58]
                node io_Imm_hi_4 = cat(io_Imm_hi_hi_2, io_Imm_hi_lo_2) @[Cat.scala 30:58]
                node _io_Imm_T_18 = cat(io_Imm_hi_4, io_Imm_lo_4) @[Cat.scala 30:58]
                node _io_Imm_T_19 = asSInt(_io_Imm_T_18) @[CU.scala 132:104]
                io.Imm <= _io_Imm_T_19 @[CU.scala 132:12]
                io.func <= UInt<1>("h00") @[CU.scala 133:13]
                io.Rs1 <= UInt<1>("h00") @[CU.scala 134:12]
                io.Rs2 <= UInt<1>("h00") @[CU.scala 135:12]
                io.MemWrite <= UInt<1>("h00") @[CU.scala 136:17]
                io.RegWrite <= UInt<1>("h01") @[CU.scala 137:17]
                io.Instype <= UInt<1>("h00") @[CU.scala 138:16]
                io.lengthselect <= UInt<1>("h00") @[CU.scala 139:21]
                io.aluselect <= UInt<1>("h00") @[CU.scala 140:18]
                io.wbselect <= UInt<2>("h02") @[CU.scala 141:17]
                io.btype <= UInt<1>("h00") @[CU.scala 142:14]
                io.pcselec <= UInt<1>("h01") @[CU.scala 143:16]
                io.jump <= UInt<1>("h01") @[CU.scala 144:13]
                skip @[CU.scala 130:41]
              else : @[CU.scala 148:39]
                node _T_6 = eq(Opcode, UInt<7>("h067")) @[CU.scala 148:22]
                when _T_6 : @[CU.scala 148:39]
                  node _io_Imm_T_20 = bits(io.ins, 31, 31) @[CU.scala 149:35]
                  node _io_Imm_T_21 = bits(_io_Imm_T_20, 0, 0) @[Bitwise.scala 72:15]
                  node io_Imm_hi_5 = mux(_io_Imm_T_21, UInt<11>("h07ff"), UInt<11>("h00")) @[Bitwise.scala 72:12]
                  node io_Imm_lo_5 = bits(io.ins, 31, 20) @[CU.scala 149:47]
                  node _io_Imm_T_22 = cat(io_Imm_hi_5, io_Imm_lo_5) @[Cat.scala 30:58]
                  node _io_Imm_T_23 = asSInt(_io_Imm_T_22) @[CU.scala 149:62]
                  io.Imm <= _io_Imm_T_23 @[CU.scala 149:14]
                  node _io_Rs1_T_5 = bits(io.ins, 19, 15) @[CU.scala 150:23]
                  io.Rs1 <= _io_Rs1_T_5 @[CU.scala 150:14]
                  node _io_func_T_18 = bits(io.ins, 14, 12) @[CU.scala 151:25]
                  io.func <= _io_func_T_18 @[CU.scala 151:15]
                  io.Rs2 <= UInt<1>("h00") @[CU.scala 152:14]
                  node _io_RD_T_5 = bits(io.ins, 11, 7) @[CU.scala 153:22]
                  io.RD <= _io_RD_T_5 @[CU.scala 153:13]
                  io.MemWrite <= UInt<1>("h00") @[CU.scala 154:19]
                  io.RegWrite <= UInt<1>("h01") @[CU.scala 155:19]
                  io.Instype <= UInt<1>("h00") @[CU.scala 156:18]
                  io.lengthselect <= UInt<1>("h00") @[CU.scala 157:23]
                  io.aluselect <= UInt<1>("h01") @[CU.scala 158:20]
                  io.wbselect <= UInt<1>("h01") @[CU.scala 159:19]
                  io.btype <= UInt<1>("h00") @[CU.scala 160:16]
                  io.pcselec <= UInt<1>("h01") @[CU.scala 161:18]
                  io.jump <= UInt<1>("h00") @[CU.scala 162:15]
                  skip @[CU.scala 148:39]
                else : @[CU.scala 164:39]
                  node _T_7 = eq(Opcode, UInt<6>("h037")) @[CU.scala 164:22]
                  when _T_7 : @[CU.scala 164:39]
                    node io_Imm_hi_hi_3 = bits(io.ins, 31, 12) @[CU.scala 165:27]
                    node io_Imm_hi_lo_3 = mux(UInt<1>("h00"), UInt<11>("h07ff"), UInt<11>("h00")) @[Bitwise.scala 72:12]
                    node io_Imm_hi_6 = cat(io_Imm_hi_hi_3, io_Imm_hi_lo_3) @[Cat.scala 30:58]
                    node _io_Imm_T_24 = cat(io_Imm_hi_6, UInt<1>("h00")) @[Cat.scala 30:58]
                    node _io_Imm_T_25 = asSInt(_io_Imm_T_24) @[CU.scala 165:61]
                    io.Imm <= _io_Imm_T_25 @[CU.scala 165:14]
                    io.func <= UInt<1>("h00") @[CU.scala 166:15]
                    io.Rs2 <= UInt<1>("h00") @[CU.scala 167:14]
                    io.Rs1 <= UInt<1>("h00") @[CU.scala 168:14]
                    node _io_RD_T_6 = bits(io.ins, 11, 7) @[CU.scala 169:22]
                    io.RD <= _io_RD_T_6 @[CU.scala 169:13]
                    io.MemWrite <= UInt<1>("h00") @[CU.scala 170:19]
                    io.RegWrite <= UInt<1>("h01") @[CU.scala 171:19]
                    io.Instype <= UInt<1>("h00") @[CU.scala 172:18]
                    io.lengthselect <= UInt<1>("h00") @[CU.scala 173:23]
                    io.aluselect <= UInt<1>("h01") @[CU.scala 174:20]
                    io.wbselect <= UInt<1>("h01") @[CU.scala 175:19]
                    io.btype <= UInt<1>("h00") @[CU.scala 176:16]
                    io.jump <= UInt<1>("h00") @[CU.scala 177:15]
                    io.pcselec <= UInt<1>("h00") @[CU.scala 178:18]
                    skip @[CU.scala 164:39]
                  else : @[CU.scala 180:40]
                    node _T_8 = eq(Opcode, UInt<5>("h017")) @[CU.scala 180:22]
                    when _T_8 : @[CU.scala 180:40]
                      node io_Imm_hi_hi_4 = bits(io.ins, 31, 12) @[CU.scala 181:27]
                      node io_Imm_hi_lo_4 = mux(UInt<1>("h00"), UInt<11>("h07ff"), UInt<11>("h00")) @[Bitwise.scala 72:12]
                      node io_Imm_hi_7 = cat(io_Imm_hi_hi_4, io_Imm_hi_lo_4) @[Cat.scala 30:58]
                      node _io_Imm_T_26 = cat(io_Imm_hi_7, UInt<1>("h00")) @[Cat.scala 30:58]
                      node _io_Imm_T_27 = asSInt(_io_Imm_T_26) @[CU.scala 181:63]
                      io.Imm <= _io_Imm_T_27 @[CU.scala 181:14]
                      io.func <= UInt<1>("h00") @[CU.scala 182:15]
                      io.Rs2 <= UInt<1>("h00") @[CU.scala 183:14]
                      io.Rs1 <= UInt<1>("h00") @[CU.scala 184:14]
                      io.RD <= UInt<1>("h00") @[CU.scala 185:13]
                      io.MemWrite <= UInt<1>("h00") @[CU.scala 186:19]
                      io.RegWrite <= UInt<1>("h00") @[CU.scala 187:19]
                      io.Instype <= UInt<1>("h00") @[CU.scala 188:18]
                      io.lengthselect <= UInt<1>("h00") @[CU.scala 189:23]
                      io.aluselect <= UInt<1>("h01") @[CU.scala 190:20]
                      io.wbselect <= UInt<1>("h00") @[CU.scala 191:19]
                      io.btype <= UInt<1>("h00") @[CU.scala 192:16]
                      io.jump <= UInt<1>("h01") @[CU.scala 193:15]
                      io.pcselec <= UInt<1>("h01") @[CU.scala 194:18]
                      skip @[CU.scala 180:40]
                    else : @[CU.scala 198:15]
                      io.RD <= UInt<1>("h00") @[CU.scala 199:13]
                      io.func <= UInt<1>("h00") @[CU.scala 200:15]
                      io.Rs1 <= UInt<1>("h00") @[CU.scala 201:14]
                      io.Rs2 <= UInt<1>("h00") @[CU.scala 202:14]
                      io.RegWrite <= UInt<1>("h00") @[CU.scala 203:19]
                      io.MemWrite <= UInt<1>("h00") @[CU.scala 204:19]
                      io.Instype <= UInt<1>("h00") @[CU.scala 205:18]
                      io.Imm <= asSInt(UInt<1>("h00")) @[CU.scala 206:14]
                      io.wbselect <= UInt<1>("h00") @[CU.scala 207:19]
                      io.aluselect <= UInt<1>("h00") @[CU.scala 208:20]
                      io.lengthselect <= UInt<1>("h00") @[CU.scala 209:23]
                      io.pcselec <= UInt<1>("h00") @[CU.scala 210:18]
                      skip @[CU.scala 198:15]
    
  module RegisterFile : 
    input clock : Clock
    input reset : Reset
    output io : {flip Wen : UInt<1>, flip RD : UInt<5>, flip Rs1in : UInt<5>, flip Rs2in : UInt<5>, Rs1out : SInt<32>, Rs2out : SInt<32>, flip datain : SInt<32>}
    
    reg regFile : SInt<32>[1024], clock @[RegisterFile.scala 15:21]
    io.Rs1out <= asSInt(UInt<1>("h00")) @[RegisterFile.scala 17:13]
    io.Rs2out <= asSInt(UInt<1>("h00")) @[RegisterFile.scala 18:13]
    regFile[0] <= asSInt(UInt<1>("h00")) @[RegisterFile.scala 20:14]
    node _T = neq(io.RD, UInt<1>("h00")) @[RegisterFile.scala 23:25]
    node _T_1 = and(io.Wen, _T) @[RegisterFile.scala 23:15]
    when _T_1 : @[RegisterFile.scala 23:34]
      regFile[io.RD] <= io.datain @[RegisterFile.scala 24:20]
      io.Rs1out <= regFile[io.Rs1in] @[RegisterFile.scala 25:15]
      io.Rs2out <= regFile[io.Rs2in] @[RegisterFile.scala 26:15]
      skip @[RegisterFile.scala 23:34]
    else : @[RegisterFile.scala 28:15]
      io.Rs1out <= regFile[io.Rs1in] @[RegisterFile.scala 29:17]
      io.Rs2out <= regFile[io.Rs2in] @[RegisterFile.scala 30:17]
      skip @[RegisterFile.scala 28:15]
    
  module InstMem : 
    input clock : Clock
    input reset : Reset
    output io : {flip addr : UInt<32>, inst : UInt<32>}
    
    cmem imem : UInt<32>[1024] @[InsMem.scala 14:18]
    node _io_inst_T = shr(io.addr, 2) @[InsMem.scala 16:32]
    node _io_inst_T_1 = bits(_io_inst_T, 9, 0) @[InsMem.scala 16:21]
    infer mport io_inst_MPORT = imem[_io_inst_T_1], clock @[InsMem.scala 16:21]
    io.inst <= io_inst_MPORT @[InsMem.scala 16:13]
    
  module Datamem : 
    input clock : Clock
    input reset : Reset
    output io : {flip Wen : UInt<1>, flip addr : UInt<32>, flip datain : SInt<32>, dataout : SInt<32>, flip fun3 : UInt<3>}
    
    smem memory : SInt<8>[4][1024], undefined @[Datamem.scala 14:27]
    wire mask : UInt<1>[4] @[Datamem.scala 15:18]
    wire tempstore : SInt<8>[4] @[Datamem.scala 16:23]
    wire tempread : SInt<8>[4] @[Datamem.scala 17:22]
    io.dataout <= asSInt(UInt<1>("h00")) @[Datamem.scala 19:14]
    node _tempstore_0_T = bits(io.datain, 7, 0) @[Datamem.scala 21:28]
    node _tempstore_0_T_1 = asSInt(_tempstore_0_T) @[Datamem.scala 21:41]
    tempstore[0] <= _tempstore_0_T_1 @[Datamem.scala 21:16]
    node _tempstore_1_T = bits(io.datain, 15, 8) @[Datamem.scala 22:28]
    node _tempstore_1_T_1 = asSInt(_tempstore_1_T) @[Datamem.scala 22:42]
    tempstore[1] <= _tempstore_1_T_1 @[Datamem.scala 22:16]
    node _tempstore_2_T = bits(io.datain, 23, 16) @[Datamem.scala 23:28]
    node _tempstore_2_T_1 = asSInt(_tempstore_2_T) @[Datamem.scala 23:43]
    tempstore[2] <= _tempstore_2_T_1 @[Datamem.scala 23:16]
    node _tempstore_3_T = bits(io.datain, 31, 24) @[Datamem.scala 24:28]
    node _tempstore_3_T_1 = asSInt(_tempstore_3_T) @[Datamem.scala 24:43]
    tempstore[3] <= _tempstore_3_T_1 @[Datamem.scala 24:16]
    mask[0] <= UInt<1>("h00") @[Datamem.scala 26:11]
    mask[1] <= UInt<1>("h00") @[Datamem.scala 27:11]
    mask[2] <= UInt<1>("h00") @[Datamem.scala 28:11]
    mask[3] <= UInt<1>("h00") @[Datamem.scala 29:11]
    when io.Wen : @[Datamem.scala 31:16]
      node _T = eq(io.fun3, UInt<1>("h00")) @[Datamem.scala 32:18]
      when _T : @[Datamem.scala 32:27]
        node _T_1 = bits(io.addr, 1, 0) @[Datamem.scala 33:19]
        node _T_2 = eq(_T_1, UInt<1>("h00")) @[Datamem.scala 33:26]
        when _T_2 : @[Datamem.scala 33:35]
          mask[0] <= UInt<1>("h01") @[Datamem.scala 34:17]
          mask[1] <= UInt<1>("h00") @[Datamem.scala 35:17]
          mask[2] <= UInt<1>("h00") @[Datamem.scala 36:17]
          mask[3] <= UInt<1>("h00") @[Datamem.scala 37:17]
          skip @[Datamem.scala 33:35]
        else : @[Datamem.scala 38:41]
          node _T_3 = bits(io.addr, 1, 0) @[Datamem.scala 38:25]
          node _T_4 = eq(_T_3, UInt<1>("h01")) @[Datamem.scala 38:32]
          when _T_4 : @[Datamem.scala 38:41]
            mask[0] <= UInt<1>("h00") @[Datamem.scala 39:17]
            mask[1] <= UInt<1>("h01") @[Datamem.scala 40:17]
            mask[2] <= UInt<1>("h00") @[Datamem.scala 41:17]
            mask[3] <= UInt<1>("h00") @[Datamem.scala 42:17]
            node _tempstore_1_T_2 = bits(io.datain, 7, 0) @[Datamem.scala 44:34]
            node _tempstore_1_T_3 = asSInt(_tempstore_1_T_2) @[Datamem.scala 44:47]
            tempstore[1] <= _tempstore_1_T_3 @[Datamem.scala 44:22]
            skip @[Datamem.scala 38:41]
          else : @[Datamem.scala 47:41]
            node _T_5 = bits(io.addr, 1, 0) @[Datamem.scala 47:25]
            node _T_6 = eq(_T_5, UInt<2>("h02")) @[Datamem.scala 47:32]
            when _T_6 : @[Datamem.scala 47:41]
              mask[0] <= UInt<1>("h00") @[Datamem.scala 48:17]
              mask[1] <= UInt<1>("h00") @[Datamem.scala 49:17]
              mask[2] <= UInt<1>("h01") @[Datamem.scala 50:17]
              mask[3] <= UInt<1>("h00") @[Datamem.scala 51:17]
              node _tempstore_2_T_2 = bits(io.datain, 7, 0) @[Datamem.scala 53:34]
              node _tempstore_2_T_3 = asSInt(_tempstore_2_T_2) @[Datamem.scala 53:47]
              tempstore[2] <= _tempstore_2_T_3 @[Datamem.scala 53:22]
              skip @[Datamem.scala 47:41]
            else : @[Datamem.scala 56:41]
              node _T_7 = bits(io.addr, 1, 0) @[Datamem.scala 56:25]
              node _T_8 = eq(_T_7, UInt<2>("h03")) @[Datamem.scala 56:32]
              when _T_8 : @[Datamem.scala 56:41]
                mask[0] <= UInt<1>("h00") @[Datamem.scala 57:17]
                mask[1] <= UInt<1>("h00") @[Datamem.scala 58:17]
                mask[2] <= UInt<1>("h00") @[Datamem.scala 59:17]
                mask[3] <= UInt<1>("h01") @[Datamem.scala 60:17]
                node _tempstore_3_T_2 = bits(io.datain, 7, 0) @[Datamem.scala 62:34]
                node _tempstore_3_T_3 = asSInt(_tempstore_3_T_2) @[Datamem.scala 62:47]
                tempstore[3] <= _tempstore_3_T_3 @[Datamem.scala 62:22]
                skip @[Datamem.scala 56:41]
        skip @[Datamem.scala 32:27]
      else : @[Datamem.scala 66:34]
        node _T_9 = eq(io.fun3, UInt<1>("h01")) @[Datamem.scala 66:25]
        when _T_9 : @[Datamem.scala 66:34]
          node _T_10 = bits(io.addr, 1, 0) @[Datamem.scala 67:21]
          node _T_11 = eq(_T_10, UInt<1>("h00")) @[Datamem.scala 67:28]
          when _T_11 : @[Datamem.scala 67:37]
            mask[0] <= UInt<1>("h01") @[Datamem.scala 68:19]
            mask[1] <= UInt<1>("h01") @[Datamem.scala 69:19]
            mask[2] <= UInt<1>("h00") @[Datamem.scala 70:19]
            mask[3] <= UInt<1>("h00") @[Datamem.scala 71:19]
            skip @[Datamem.scala 67:37]
          else : @[Datamem.scala 73:43]
            node _T_12 = bits(io.addr, 1, 0) @[Datamem.scala 73:27]
            node _T_13 = eq(_T_12, UInt<1>("h01")) @[Datamem.scala 73:34]
            when _T_13 : @[Datamem.scala 73:43]
              mask[0] <= UInt<1>("h00") @[Datamem.scala 74:19]
              mask[1] <= UInt<1>("h01") @[Datamem.scala 75:19]
              mask[2] <= UInt<1>("h01") @[Datamem.scala 76:19]
              mask[3] <= UInt<1>("h00") @[Datamem.scala 77:19]
              node _tempstore_1_T_4 = bits(io.datain, 7, 0) @[Datamem.scala 79:36]
              node _tempstore_1_T_5 = asSInt(_tempstore_1_T_4) @[Datamem.scala 79:49]
              tempstore[1] <= _tempstore_1_T_5 @[Datamem.scala 79:24]
              node _tempstore_2_T_4 = bits(io.datain, 15, 8) @[Datamem.scala 80:36]
              node _tempstore_2_T_5 = asSInt(_tempstore_2_T_4) @[Datamem.scala 80:50]
              tempstore[2] <= _tempstore_2_T_5 @[Datamem.scala 80:24]
              skip @[Datamem.scala 73:43]
            else : @[Datamem.scala 83:43]
              node _T_14 = bits(io.addr, 1, 0) @[Datamem.scala 83:27]
              node _T_15 = eq(_T_14, UInt<2>("h02")) @[Datamem.scala 83:34]
              when _T_15 : @[Datamem.scala 83:43]
                mask[0] <= UInt<1>("h00") @[Datamem.scala 84:19]
                mask[1] <= UInt<1>("h00") @[Datamem.scala 85:19]
                mask[2] <= UInt<1>("h01") @[Datamem.scala 86:19]
                mask[3] <= UInt<1>("h01") @[Datamem.scala 87:19]
                node _tempstore_2_T_6 = bits(io.datain, 7, 0) @[Datamem.scala 89:36]
                node _tempstore_2_T_7 = asSInt(_tempstore_2_T_6) @[Datamem.scala 89:49]
                tempstore[2] <= _tempstore_2_T_7 @[Datamem.scala 89:24]
                node _tempstore_3_T_4 = bits(io.datain, 15, 8) @[Datamem.scala 90:36]
                node _tempstore_3_T_5 = asSInt(_tempstore_3_T_4) @[Datamem.scala 90:50]
                tempstore[3] <= _tempstore_3_T_5 @[Datamem.scala 90:24]
                skip @[Datamem.scala 83:43]
              else : @[Datamem.scala 93:43]
                node _T_16 = bits(io.addr, 1, 0) @[Datamem.scala 93:27]
                node _T_17 = eq(_T_16, UInt<2>("h03")) @[Datamem.scala 93:34]
                when _T_17 : @[Datamem.scala 93:43]
                  mask[0] <= UInt<1>("h00") @[Datamem.scala 94:19]
                  mask[1] <= UInt<1>("h00") @[Datamem.scala 95:19]
                  mask[2] <= UInt<1>("h00") @[Datamem.scala 96:19]
                  mask[3] <= UInt<1>("h01") @[Datamem.scala 97:19]
                  node _tempstore_3_T_6 = bits(io.datain, 7, 0) @[Datamem.scala 99:36]
                  node _tempstore_3_T_7 = asSInt(_tempstore_3_T_6) @[Datamem.scala 99:49]
                  tempstore[3] <= _tempstore_3_T_7 @[Datamem.scala 99:24]
                  skip @[Datamem.scala 93:43]
          skip @[Datamem.scala 66:34]
        else : @[Datamem.scala 103:34]
          node _T_18 = eq(io.fun3, UInt<2>("h02")) @[Datamem.scala 103:25]
          when _T_18 : @[Datamem.scala 103:34]
            mask[0] <= UInt<1>("h01") @[Datamem.scala 104:17]
            mask[1] <= UInt<1>("h01") @[Datamem.scala 105:17]
            mask[2] <= UInt<1>("h01") @[Datamem.scala 106:17]
            mask[3] <= UInt<1>("h01") @[Datamem.scala 107:17]
            skip @[Datamem.scala 103:34]
      node _T_19 = bits(io.addr, 31, 2) @[Datamem.scala 111:25]
      node _T_20 = bits(_T_19, 9, 0)
      write mport MPORT = memory[_T_20], clock
      when mask[0] :
        MPORT[0] <= tempstore[0]
        skip
      when mask[1] :
        MPORT[1] <= tempstore[1]
        skip
      when mask[2] :
        MPORT[2] <= tempstore[2]
        skip
      when mask[3] :
        MPORT[3] <= tempstore[3]
        skip
      node _T_21 = bits(io.addr, 31, 2) @[Datamem.scala 112:36]
      wire _WIRE : UInt @[Datamem.scala 112:28]
      _WIRE is invalid @[Datamem.scala 112:28]
      when UInt<1>("h01") : @[Datamem.scala 112:28]
        _WIRE <= _T_21 @[Datamem.scala 112:28]
        node _T_22 = or(_WIRE, UInt<10>("h00")) @[Datamem.scala 112:28]
        node _T_23 = bits(_T_22, 9, 0) @[Datamem.scala 112:28]
        read mport MPORT_1 = memory[_T_23], clock @[Datamem.scala 112:28]
        skip @[Datamem.scala 112:28]
      tempread[0] <= MPORT_1[0] @[Datamem.scala 112:14]
      tempread[1] <= MPORT_1[1] @[Datamem.scala 112:14]
      tempread[2] <= MPORT_1[2] @[Datamem.scala 112:14]
      tempread[3] <= MPORT_1[3] @[Datamem.scala 112:14]
      skip @[Datamem.scala 31:16]
    node _T_24 = bits(io.addr, 31, 2) @[Datamem.scala 116:34]
    wire _WIRE_1 : UInt @[Datamem.scala 116:26]
    _WIRE_1 is invalid @[Datamem.scala 116:26]
    when UInt<1>("h01") : @[Datamem.scala 116:26]
      _WIRE_1 <= _T_24 @[Datamem.scala 116:26]
      node _T_25 = or(_WIRE_1, UInt<10>("h00")) @[Datamem.scala 116:26]
      node _T_26 = bits(_T_25, 9, 0) @[Datamem.scala 116:26]
      read mport MPORT_2 = memory[_T_26], clock @[Datamem.scala 116:26]
      skip @[Datamem.scala 116:26]
    tempread[0] <= MPORT_2[0] @[Datamem.scala 116:12]
    tempread[1] <= MPORT_2[1] @[Datamem.scala 116:12]
    tempread[2] <= MPORT_2[2] @[Datamem.scala 116:12]
    tempread[3] <= MPORT_2[3] @[Datamem.scala 116:12]
    node _T_27 = eq(io.fun3, UInt<1>("h00")) @[Datamem.scala 117:16]
    when _T_27 : @[Datamem.scala 117:25]
      node _io_dataout_T = bits(tempread[0], 7, 7) @[Datamem.scala 118:43]
      node _io_dataout_T_1 = bits(_io_dataout_T, 0, 0) @[Bitwise.scala 72:15]
      node io_dataout_hi = mux(_io_dataout_T_1, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
      node io_dataout_lo = asUInt(tempread[0]) @[Cat.scala 30:58]
      node _io_dataout_T_2 = cat(io_dataout_hi, io_dataout_lo) @[Cat.scala 30:58]
      node _io_dataout_T_3 = asSInt(_io_dataout_T_2) @[Datamem.scala 118:68]
      io.dataout <= _io_dataout_T_3 @[Datamem.scala 118:16]
      skip @[Datamem.scala 117:25]
    else : @[Datamem.scala 119:31]
      node _T_28 = eq(io.fun3, UInt<1>("h01")) @[Datamem.scala 119:22]
      when _T_28 : @[Datamem.scala 119:31]
        node _io_dataout_T_4 = bits(tempread[1], 7, 7) @[Datamem.scala 120:43]
        node _io_dataout_T_5 = bits(_io_dataout_T_4, 0, 0) @[Bitwise.scala 72:15]
        node io_dataout_hi_hi = mux(_io_dataout_T_5, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
        node io_dataout_lo_1 = asUInt(tempread[0]) @[Cat.scala 30:58]
        node io_dataout_hi_lo = asUInt(tempread[1]) @[Cat.scala 30:58]
        node io_dataout_hi_1 = cat(io_dataout_hi_hi, io_dataout_hi_lo) @[Cat.scala 30:58]
        node _io_dataout_T_6 = cat(io_dataout_hi_1, io_dataout_lo_1) @[Cat.scala 30:58]
        node _io_dataout_T_7 = asSInt(_io_dataout_T_6) @[Datamem.scala 120:81]
        io.dataout <= _io_dataout_T_7 @[Datamem.scala 120:16]
        skip @[Datamem.scala 119:31]
      else : @[Datamem.scala 121:31]
        node _T_29 = eq(io.fun3, UInt<2>("h02")) @[Datamem.scala 121:22]
        when _T_29 : @[Datamem.scala 121:31]
          node io_dataout_lo_lo = asUInt(tempread[0]) @[Cat.scala 30:58]
          node io_dataout_lo_hi = asUInt(tempread[1]) @[Cat.scala 30:58]
          node io_dataout_lo_2 = cat(io_dataout_lo_hi, io_dataout_lo_lo) @[Cat.scala 30:58]
          node io_dataout_hi_lo_1 = asUInt(tempread[2]) @[Cat.scala 30:58]
          node io_dataout_hi_hi_1 = asUInt(tempread[3]) @[Cat.scala 30:58]
          node io_dataout_hi_2 = cat(io_dataout_hi_hi_1, io_dataout_hi_lo_1) @[Cat.scala 30:58]
          node _io_dataout_T_8 = cat(io_dataout_hi_2, io_dataout_lo_2) @[Cat.scala 30:58]
          node _io_dataout_T_9 = asSInt(_io_dataout_T_8) @[Datamem.scala 122:81]
          io.dataout <= _io_dataout_T_9 @[Datamem.scala 122:16]
          skip @[Datamem.scala 121:31]
    
  module ALU1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_A : SInt<32>, flip in_B : SInt<32>, flip alu_Op : UInt<4>, out : SInt<32>, sum : SInt<32>}
    
    node _sum_T = add(io.in_A, io.in_B) @[buggedAlu.scala 47:23]
    node _sum_T_1 = tail(_sum_T, 1) @[buggedAlu.scala 47:23]
    node sum = asSInt(_sum_T_1) @[buggedAlu.scala 47:23]
    node _sub_T = sub(io.in_A, io.in_B) @[buggedAlu.scala 48:23]
    node _sub_T_1 = tail(_sub_T, 1) @[buggedAlu.scala 48:23]
    node sub = asSInt(_sub_T_1) @[buggedAlu.scala 48:23]
    node _cmp_T = lt(io.in_A, io.in_B) @[buggedAlu.scala 49:27]
    node cmp = mux(_cmp_T, asSInt(UInt<2>("h01")), asSInt(UInt<1>("h00"))) @[buggedAlu.scala 49:18]
    node _cmpU_T = asUInt(io.in_A) @[buggedAlu.scala 50:34]
    node _cmpU_T_1 = asUInt(io.in_B) @[buggedAlu.scala 50:53]
    node _cmpU_T_2 = lt(_cmpU_T, _cmpU_T_1) @[buggedAlu.scala 50:37]
    node cmpU = mux(_cmpU_T_2, asSInt(UInt<2>("h01")), asSInt(UInt<1>("h00"))) @[buggedAlu.scala 50:19]
    node shamt = bits(io.in_B, 4, 0) @[buggedAlu.scala 51:24]
    node _shiftrl_T = asUInt(io.in_A) @[buggedAlu.scala 53:33]
    node shiftrl = dshr(_shiftrl_T, shamt) @[buggedAlu.scala 53:36]
    node shitfl = dshl(io.in_A, shamt) @[buggedAlu.scala 54:26]
    node shiftrA = dshr(io.in_A, shamt) @[buggedAlu.scala 55:27]
    node _beq_T = eq(io.in_A, io.in_B) @[buggedAlu.scala 56:27]
    node beq = mux(_beq_T, asSInt(UInt<2>("h01")), asSInt(UInt<1>("h00"))) @[buggedAlu.scala 56:18]
    node _bge_T = or(cmp, beq) @[buggedAlu.scala 57:20]
    node bge = asSInt(_bge_T) @[buggedAlu.scala 57:20]
    node _bgeu_T = asUInt(io.in_A) @[buggedAlu.scala 58:30]
    node _bgeu_T_1 = asUInt(io.in_B) @[buggedAlu.scala 58:50]
    node bgeu = geq(_bgeu_T, _bgeu_T_1) @[buggedAlu.scala 58:33]
    node _io_out_T = eq(io.alu_Op, UInt<4>("h00")) @[buggedAlu.scala 63:28]
    node _io_out_T_1 = eq(io.alu_Op, UInt<4>("h01")) @[buggedAlu.scala 64:32]
    node _io_out_T_2 = eq(io.alu_Op, UInt<4>("h04")) @[buggedAlu.scala 65:35]
    node _io_out_T_3 = eq(io.alu_Op, UInt<4>("h06")) @[buggedAlu.scala 66:39]
    node _io_out_T_4 = eq(io.alu_Op, UInt<4>("h0a")) @[buggedAlu.scala 67:43]
    node _io_out_T_5 = asSInt(shiftrl) @[buggedAlu.scala 67:70]
    node _io_out_T_6 = eq(io.alu_Op, UInt<4>("h0b")) @[buggedAlu.scala 68:47]
    node _io_out_T_7 = eq(io.alu_Op, UInt<4>("h02")) @[buggedAlu.scala 69:51]
    node _io_out_T_8 = eq(io.alu_Op, UInt<4>("h0e")) @[buggedAlu.scala 70:55]
    node _io_out_T_9 = and(io.in_A, io.in_B) @[buggedAlu.scala 70:77]
    node _io_out_T_10 = asSInt(_io_out_T_9) @[buggedAlu.scala 70:77]
    node _io_out_T_11 = eq(io.alu_Op, UInt<4>("h0c")) @[buggedAlu.scala 71:59]
    node _io_out_T_12 = or(io.in_A, io.in_B) @[buggedAlu.scala 71:80]
    node _io_out_T_13 = asSInt(_io_out_T_12) @[buggedAlu.scala 71:80]
    node _io_out_T_14 = eq(io.alu_Op, UInt<4>("h08")) @[buggedAlu.scala 72:64]
    node _io_out_T_15 = xor(io.in_A, io.in_B) @[buggedAlu.scala 72:86]
    node _io_out_T_16 = asSInt(_io_out_T_15) @[buggedAlu.scala 72:86]
    node _io_out_T_17 = mux(_io_out_T_14, _io_out_T_16, asSInt(UInt<1>("h00"))) @[buggedAlu.scala 72:53]
    node _io_out_T_18 = mux(_io_out_T_11, _io_out_T_13, _io_out_T_17) @[buggedAlu.scala 71:48]
    node _io_out_T_19 = mux(_io_out_T_8, _io_out_T_10, _io_out_T_18) @[buggedAlu.scala 70:44]
    node _io_out_T_20 = mux(_io_out_T_7, shitfl, _io_out_T_19) @[buggedAlu.scala 69:40]
    node _io_out_T_21 = mux(_io_out_T_6, shiftrA, _io_out_T_20) @[buggedAlu.scala 68:36]
    node _io_out_T_22 = mux(_io_out_T_4, _io_out_T_5, _io_out_T_21) @[buggedAlu.scala 67:32]
    node _io_out_T_23 = mux(_io_out_T_3, cmpU, _io_out_T_22) @[buggedAlu.scala 66:28]
    node _io_out_T_24 = mux(_io_out_T_2, cmp, _io_out_T_23) @[buggedAlu.scala 65:24]
    node _io_out_T_25 = mux(_io_out_T_1, sub, _io_out_T_24) @[buggedAlu.scala 64:20]
    node _io_out_T_26 = mux(_io_out_T, sum, _io_out_T_25) @[buggedAlu.scala 63:16]
    io.out <= _io_out_T_26 @[buggedAlu.scala 62:12]
    io.sum <= sum @[buggedAlu.scala 75:12]
    
  module BranchALU : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_A : SInt<32>, flip in_B : SInt<32>, flip fun3 : UInt<4>, doBranch : UInt<1>, flip isBtype : UInt<1>}
    
    node Beq = eq(io.in_A, io.in_B) @[BranchALU.scala 15:21]
    node blt = lt(io.in_A, io.in_B) @[BranchALU.scala 16:21]
    node _bgeu_T = asUInt(io.in_A) @[BranchALU.scala 17:28]
    node _bgeu_T_1 = asUInt(io.in_B) @[BranchALU.scala 17:48]
    node bgeu = geq(_bgeu_T, _bgeu_T_1) @[BranchALU.scala 17:31]
    node _bltu_T = asUInt(io.in_A) @[BranchALU.scala 18:28]
    node _bltu_T_1 = asUInt(io.in_B) @[BranchALU.scala 18:47]
    node bltu = lt(_bltu_T, _bltu_T_1) @[BranchALU.scala 18:31]
    node _T = eq(io.isBtype, UInt<1>("h01")) @[BranchALU.scala 20:19]
    when _T : @[BranchALU.scala 20:28]
      node _io_doBranch_T = eq(io.fun3, UInt<1>("h00")) @[BranchALU.scala 21:32]
      node _io_doBranch_T_1 = eq(io.fun3, UInt<1>("h01")) @[BranchALU.scala 22:19]
      node _io_doBranch_T_2 = eq(Beq, UInt<1>("h00")) @[BranchALU.scala 22:28]
      node _io_doBranch_T_3 = eq(io.fun3, UInt<3>("h04")) @[BranchALU.scala 23:21]
      node _io_doBranch_T_4 = eq(io.fun3, UInt<3>("h05")) @[BranchALU.scala 24:23]
      node _io_doBranch_T_5 = eq(blt, UInt<1>("h00")) @[BranchALU.scala 24:35]
      node _io_doBranch_T_6 = or(_io_doBranch_T_5, Beq) @[BranchALU.scala 24:40]
      node _io_doBranch_T_7 = eq(io.fun3, UInt<3>("h06")) @[BranchALU.scala 25:25]
      node _io_doBranch_T_8 = eq(io.fun3, UInt<3>("h07")) @[BranchALU.scala 26:27]
      node _io_doBranch_T_9 = mux(_io_doBranch_T_8, bgeu, UInt<1>("h00")) @[BranchALU.scala 26:18]
      node _io_doBranch_T_10 = mux(_io_doBranch_T_7, bltu, _io_doBranch_T_9) @[BranchALU.scala 25:16]
      node _io_doBranch_T_11 = mux(_io_doBranch_T_4, _io_doBranch_T_6, _io_doBranch_T_10) @[BranchALU.scala 24:14]
      node _io_doBranch_T_12 = mux(_io_doBranch_T_3, blt, _io_doBranch_T_11) @[BranchALU.scala 23:12]
      node _io_doBranch_T_13 = mux(_io_doBranch_T_1, _io_doBranch_T_2, _io_doBranch_T_12) @[BranchALU.scala 22:10]
      node _io_doBranch_T_14 = mux(_io_doBranch_T, Beq, _io_doBranch_T_13) @[BranchALU.scala 21:23]
      io.doBranch <= _io_doBranch_T_14 @[BranchALU.scala 21:17]
      skip @[BranchALU.scala 20:28]
    else : @[BranchALU.scala 29:15]
      io.doBranch <= UInt<1>("h00") @[BranchALU.scala 30:19]
      skip @[BranchALU.scala 29:15]
    
  module DataPath : 
    input clock : Clock
    input reset : UInt<1>
    output io : {out : SInt<32>}
    
    io.out <= asSInt(UInt<1>("h00")) @[DataPath.scala 11:10]
    inst cu of CU @[DataPath.scala 14:18]
    cu.clock <= clock
    cu.reset <= reset
    inst regfile of RegisterFile @[DataPath.scala 15:23]
    regfile.clock <= clock
    regfile.reset <= reset
    inst insmem of InstMem @[DataPath.scala 16:22]
    insmem.clock <= clock
    insmem.reset <= reset
    inst datamem of Datamem @[DataPath.scala 17:23]
    datamem.clock <= clock
    datamem.reset <= reset
    inst alu of ALU1 @[DataPath.scala 18:19]
    alu.clock <= clock
    alu.reset <= reset
    inst checkbranch of BranchALU @[DataPath.scala 19:27]
    checkbranch.clock <= clock
    checkbranch.reset <= reset
    reg pc : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[DataPath.scala 21:19]
    node _pc_T = asUInt(alu.io.out) @[DataPath.scala 22:46]
    node _pc_T_1 = add(pc, UInt<3>("h04")) @[DataPath.scala 22:51]
    node _pc_T_2 = tail(_pc_T_1, 1) @[DataPath.scala 22:51]
    node _pc_T_3 = mux(cu.io.pcselec, _pc_T, _pc_T_2) @[DataPath.scala 22:12]
    pc <= _pc_T_3 @[DataPath.scala 22:6]
    cu.io.dobranch <= checkbranch.io.doBranch @[DataPath.scala 27:18]
    checkbranch.io.fun3 <= cu.io.btypefun @[DataPath.scala 28:22]
    insmem.io.addr <= pc @[DataPath.scala 29:18]
    checkbranch.io.isBtype <= cu.io.btype @[DataPath.scala 30:26]
    cu.io.ins <= insmem.io.inst @[DataPath.scala 31:13]
    node _alu_io_alu_Op_T = mux(cu.io.aluselect, UInt<1>("h00"), cu.io.func) @[DataPath.scala 32:23]
    alu.io.alu_Op <= _alu_io_alu_Op_T @[DataPath.scala 32:17]
    regfile.io.Wen <= cu.io.RegWrite @[DataPath.scala 33:18]
    datamem.io.Wen <= cu.io.MemWrite @[DataPath.scala 34:18]
    regfile.io.RD <= cu.io.RD @[DataPath.scala 35:17]
    regfile.io.Rs1in <= cu.io.Rs1 @[DataPath.scala 36:20]
    regfile.io.Rs2in <= cu.io.Rs2 @[DataPath.scala 37:20]
    datamem.io.datain <= regfile.io.Rs2out @[DataPath.scala 38:21]
    checkbranch.io.in_A <= regfile.io.Rs1out @[DataPath.scala 39:23]
    checkbranch.io.in_B <= regfile.io.Rs2out @[DataPath.scala 40:23]
    regfile.io.datain <= alu.io.out @[DataPath.scala 41:21]
    datamem.io.fun3 <= cu.io.lengthselect @[DataPath.scala 42:19]
    node _alu_io_in_A_T = or(checkbranch.io.doBranch, cu.io.jump) @[DataPath.scala 44:46]
    node _alu_io_in_A_T_1 = asSInt(pc) @[DataPath.scala 44:71]
    node _alu_io_in_A_T_2 = mux(_alu_io_in_A_T, _alu_io_in_A_T_1, regfile.io.Rs1out) @[DataPath.scala 44:21]
    alu.io.in_A <= _alu_io_in_A_T_2 @[DataPath.scala 44:15]
    node _alu_io_in_B_T = eq(cu.io.Instype, UInt<1>("h00")) @[DataPath.scala 45:22]
    node _alu_io_in_B_T_1 = mux(_alu_io_in_B_T, cu.io.Imm, regfile.io.Rs2out) @[DataPath.scala 45:21]
    alu.io.in_B <= _alu_io_in_B_T_1 @[DataPath.scala 45:15]
    node _datamem_io_addr_T = asUInt(alu.io.out) @[DataPath.scala 46:39]
    datamem.io.addr <= _datamem_io_addr_T @[DataPath.scala 46:19]
    datamem.io.datain <= regfile.io.Rs2out @[DataPath.scala 47:20]
    node _T = eq(cu.io.wbselect, UInt<1>("h01")) @[DataPath.scala 54:25]
    when _T : @[DataPath.scala 54:33]
      regfile.io.datain <= alu.io.out @[DataPath.scala 55:23]
      skip @[DataPath.scala 54:33]
    else : @[DataPath.scala 57:39]
      node _T_1 = eq(cu.io.wbselect, UInt<1>("h00")) @[DataPath.scala 57:30]
      when _T_1 : @[DataPath.scala 57:39]
        regfile.io.datain <= datamem.io.dataout @[DataPath.scala 58:25]
        skip @[DataPath.scala 57:39]
      else : @[DataPath.scala 59:39]
        node _T_2 = eq(cu.io.wbselect, UInt<2>("h02")) @[DataPath.scala 59:31]
        when _T_2 : @[DataPath.scala 59:39]
          node _regfile_io_datain_T = add(pc, UInt<3>("h04")) @[DataPath.scala 60:34]
          node _regfile_io_datain_T_1 = tail(_regfile_io_datain_T, 1) @[DataPath.scala 60:34]
          node _regfile_io_datain_T_2 = asSInt(_regfile_io_datain_T_1) @[DataPath.scala 60:46]
          regfile.io.datain <= _regfile_io_datain_T_2 @[DataPath.scala 60:27]
          skip @[DataPath.scala 59:39]
    io.out <= alu.io.out @[DataPath.scala 62:10]
    
